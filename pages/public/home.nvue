<template>
	<div>
		<view class="swiper-container">
			<u-swiper height="200" :list="bannerList" radius="0" keyName="logo" @click="bannerClick" :autoplay="false"></u-swiper>
		</view>
		<view class="notice-bar-container">
			<u-notice-bar direction="column" duration="3000" @click="noticeClick" :text="noticeList"></u-notice-bar>
		</view>
		<u-gap height="10" bgColor="#efefef"></u-gap>
		<view class="service-container">
			<u-grid :border="false">
				<u-grid-item v-for="(baseListItem, baseListIndex) in serviceTypeList" :key="baseListIndex">
					<u--image shape="circle" :showLoading="true" :src="baseListItem.picture" width="60px" height="60px" @click="click(baseListItem)"></u--image>
					<text class="grid-text">{{ baseListItem.name }}</text>
				</u-grid-item>
			</u-grid>
		</view>
		<u-gap height="10" bgColor="#efefef"></u-gap>
		<u-sticky bgColor="#fff">
			<u-tabs :list="serviceList" @click="changeService"></u-tabs>
		</u-sticky>
		<view class="teacher-container" :style="{marginBottom: $u.util.isIphoneX() ? '128rpx' : '80rpx' }">
			<teacher-list :listData="teacherList"></teacher-list>
			<u-loadmore :status="status" marginBottom="18"/>
		</view>
		<u-modal :show="showConfirm" @confirm="confirmMsg" @cancel="showConfirm=false;" :title="title" :content='content' :showCancelButton="true"></u-modal>
		<u-tabbar :value="vuex_currentTab" :placeholder="false">
			<u-tabbar-item v-for="(item,index) in tabList" @click="changeTab(item)" :text="item.name" :icon="item.icon" :key="index"></u-tabbar-item>
		</u-tabbar>
	</div>
</template>

<script>
	export default {
		options: { styleIsolation: 'shared' },
		data() {
			return {
				height: '130',
				showConfirm: false,
				title: '订阅消息提醒',
				content: '为了确保服务质量，请先订阅会议通知模板消息',
				status: 'loadmore',
				tabList: [
				],
				current: 0,
				currentNum: 0,
				teacherList: [
				],
				urls: [
					'https://cdn.uviewui.com/uview/album/1.jpg',
					'https://cdn.uviewui.com/uview/album/2.jpg',
					'https://cdn.uviewui.com/uview/album/3.jpg',
					'https://cdn.uviewui.com/uview/album/4.jpg',
					'https://cdn.uviewui.com/uview/album/5.jpg',
					'https://cdn.uviewui.com/uview/album/6.jpg',
					'https://cdn.uviewui.com/uview/album/7.jpg',
					'https://cdn.uviewui.com/uview/album/8.jpg',
					'https://cdn.uviewui.com/uview/album/9.jpg',
					'https://cdn.uviewui.com/uview/album/10.jpg',
				],
				serviceList: [
				],
				serviceTypeList: [
				],
				noticeList: [],
				bannerList: [
				],
				params: {
					page: 1,
					order: '',
					sort: '',
					type: '',
				}
			};
		},
		onShow() {
			if(!this.vuex_subscribe_meeting_msg&&this.vuex_token) {
				this.showConfirm = true;
			}
		},
		created() {
			this.tabList = this.$configs.tabList;
			this.getHomeData()
			// this.getServiceType();
			// this.getServiceList();
			this.params.order = 'desc';
			this.params.sort = 'mark';
			this.getTeacherList();
		},
		onPullDownRefresh() {
			console.log('refresh');
			this.teacherList = [];
			this.getHomeData();
			this.status = 'loadmore';
			this.params.page = 1;
			this.params.order = 'desc';
			this.params.sort = 'mark';
			this.getTeacherList();
			setTimeout(function () {
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			if(this.status !== 'noMore') {
				this.status = 'loading';
				this.params.page++;
				this.getTeacherList()
			}
		},
		methods: {
			bannerClick(index) {
				for (var i = 0; i < this.bannerList.length; i++) {
					if(index==i) {
						if(this.bannerList[i].url) {
							uni.$u.route({
								url: this.bannerList[i].url
							})
						}
						break;
					}
				}
			},
			confirmMsg() {
				this.showConfirm = false;
				this.subcribeMsg();
			},
			subcribeMsg() {
				let that = this;
				let meeting_tmpl_id = that.vuex_base_config.meeting_tmpl_id;
				uni.requestSubscribeMessage({
				  tmplIds: [meeting_tmpl_id],
				  success (res) { 
					  if(res[meeting_tmpl_id]=='accept') {
						uni.$u.vuex('vuex_subscribe_meeting_msg', true);
					  }
					  else if(res[meeting_tmpl_id]=='reject'){
						uni.$u.util.showErr('您拒绝订阅消息，将会影响后续服务');
					  }
					  else if(res[meeting_tmpl_id]=='ban'){
						uni.$u.vuex('vuex_subscribe_meeting_msg', true);
						uni.$u.util.showErr('模板消息已被后台封禁');
					  }
					  console.log(res);
				  },
				  fail (err) {
					  uni.$u.util.showErr(err.errMsg);
				  }
				})
			},
			noticeClick(index) {
				console.log(index)
			},
			getHomeData() {
				let that=this;
				uni.$u.api.homeData().then(res=>{
					let arr = [ { id: 0, name: '推荐' } ];
					that.serviceList = arr.concat(res.data.serviceAllList);
					that.serviceTypeList = res.data.serviceTypeAllList;
					that.bannerList = res.data.bannerList
					that.noticeList = res.data.notice.map(item=>item.title);
					that.height = res.data.banner_height||'130';
					uni.$u.vuex('vuex_base_config', res.data.baseConfig);
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			changeService(e) {
				console.log(e);
				this.teacherList = [];
				this.status = 'loadmore';
				this.params.type = e.id;
				this.params.page = 1;
				if(e.id == 0) {
					this.params.sort = 'mark';
					this.params.order = 'desc';
				}
				else{
					this.params.sort = '';
					this.params.order = '';
				}
				this.getTeacherList()
			},
			getServiceList() {
				let that=this;
				uni.$u.api.serviceAll().then(res=>{
					console.log(res)
					let arr = [ { id: 0, name: '推荐' } ];
					that.serviceList = arr.concat(res.data)
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			getServiceType() {
				let that=this;
				uni.$u.api.serviceTypeAll().then(res=>{
					console.log(res)
					that.serviceTypeList = res.data
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			getTeacherList() {
				let that=this;
				uni.$u.api.teacherList({ params: that.params}).then(res=>{
					console.log(res)
					if(that.teacherList.length>0) {
						that.teacherList = that.teacherList.concat(res.data.data);
					}
					else {
						that.teacherList = res.data.data;
					}
					if(res.data.current_page == res.data.last_page) {
						that.status = 'noMore';
					}
					else {
						that.status = 'loadmore';
					}
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			changeTab(item) {
				uni.$u.route({
					type: 'switchTab',
					url: item.path
				})
			},
			click1(e) {
				console.log('click1', e);
			},
			click(item) {
				uni.$u.route({
					url: '/pages/teacher/list',
					params: {
						type: item.id
					}
				})
			},
			scrolltolower() {
				this.loadmore()
			},

		}
	};
</script>

<style lang="scss" >
	.service-container {
		padding: 30rpx 0;
		.grid-text {
			margin-top: 8rpx;
		}
	}
	.teacher-container {
		padding: 24rpx;
	}
</style>
