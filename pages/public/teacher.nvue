<template>
	<view>
		<u-sticky bgColor="#fff">
			<u-tabs :list="serviceList" @click="changeService"></u-tabs>
		</u-sticky>
		<view class="teacher-container" :style="{marginBottom: $u.util.isIphoneX() ? '34px' : '0' }">
			<teacher-list v-if="teacherList.length>0" :listData="teacherList"></teacher-list>
			<u-loadmore v-if="teacherList.length>0" :status="status" color="#868E9D" fontSize="12" :status="status" marginBottom="20" marginTop="20" @loadmore="loadmore"/>
			<u-empty mode="data" :text="emptyTitle" marginTop="40" :icon="emptyIcon" :show="teacherList.length==0">
			</u-empty>
			
		</view>
		
		<cu-tabbar :currentTab="currentTab" :tabList="tabList"></cu-tabbar>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				emptyIcon: '',
				emptyTitle: '暂无老师',
				status: 'loadmore',
				serviceList: [
				],
				tabList: [],
				sortField: '',
				currentTab: 1,
				sortIndex: 0,
				teacherList: [
				],
				params: {
					page: 1,
					order: '',
					sort: '',
					type: '',
				},
			};
		},
		created() {
			this.emptyIcon = this.$configs.staticUrl + '/uploads/api/icon/img_qbt_kym.svg';
			this.tabList = this.$configs.tabList;	
			this.getServiceList();
		},
		onShow() {
			this.teacherList = [];
			this.params.page = 1;
			this.status = 'loadmore';
			this.getTeacherList();
		},
		onLoad(options) {
			this.params.type = options.type;
		},
		onPullDownRefresh() {
			console.log('refresh');
			this.teacherList = [];
			this.params.page = 1;
			this.status = 'loadmore';
			this.getTeacherList();
			setTimeout(function () {
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			if(this.status !== 'noMore') {
				this.status = 'loading';
				this.params.page++;
				this.getTeacherList()
			}
		},
		methods: {
			loadmore() {
				if(this.status !== 'noMore') {
					this.status = 'loading';
					this.params.page++;
					this.getTeacherList()
				}
			},
			changeService(e) {
				console.log(e);
				this.status = 'loadmore';
				this.params.type = e.id;
				this.params.page = 1;
				this.teacherList = [];
				if(e.id == 0) {
					this.params.sort = 'mark';
					this.params.order = 'desc';
				}
				else{
					this.params.sort = '';
					this.params.order = '';
				}
				this.getTeacherList()
			},
			getServiceList() {
				let that=this;
				uni.$u.api.serviceAll().then(res=>{
					console.log(res)
					let arr = [ { id: 0, name: '推荐' } ];
					that.serviceList = arr.concat(res.data)
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			changeTab(item) {
				uni.$u.route({
					type: 'switchTab',
					url: item.path
				})
			},
			getTeacherList() {
				let that=this;
				uni.$u.api.teacherList({ params: that.params}).then(res=>{
					console.log(res)
					if(that.teacherList.length>0) {
						that.teacherList = that.teacherList.concat(res.data.data);
					}
					else {
						that.teacherList = res.data.data;
					}
					if(res.data.current_page == res.data.last_page) {
						that.status = 'noMore';
					}
					else {
						that.status = 'loadmore';
					}
					console.log(that.status)
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
		}
	}
</script>

<style lang="scss">
	.teacher-container {
		padding: 0 30rpx;
		overflow: scroll;
		flex: 1;
	}
	.sort-box {
		padding: 24rpx;
		flex-direction: row;
		gap: 20rpx;
	}
</style>
