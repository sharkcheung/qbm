<template>
	<view>
		<u-sticky bgColor="#fff">
		<u-tabs :list="tabsList" :scrollable="false" :inactiveStyle="{color: '#737D96'}" :activeStyle="{color: '#434E5E',fontWeight: 'bold'}" itemStyle="height:100rpx;font-size:32rpx;" lineColor="#F35917" lineWidth="30" @click="changeStatus" :current="current"></u-tabs>
		</u-sticky>
		<view class="video-box" :style="{marginBottom: $u.util.isIphoneX() ? '84px' : '50px' }">
			<template v-if="current==0">
				<activity-list :listData="activityList" :showTeacher="true"></activity-list>
				<u-loadmore v-if="activityList.length>0" :status="status" marginBottom="20" marginTop="20" @loadmore="loadmore"/>
				<u-gap height="10" bgColor="#F6F9FE" v-if="activityList.length==0"></u-gap>
				<u-empty mode="data" :text="emptyTitle" :icon="emptyIcon" marginTop="20" :show="activityList.length==0">
				</u-empty>
			</template>
			<template v-else>
				<article-list from="activity" :listData="articleList"></article-list>
				<u-loadmore v-if="articleList.length>0" :status="status" marginBottom="20" marginTop="20" @loadmore="loadmoreArticle"/>
				<u-gap height="10" bgColor="#F6F9FE" v-if="articleList.length==0"></u-gap>
				<u-empty mode="data" :text="emptyTitle" :icon="emptyIcon" marginTop="20" :show="articleList.length==0">
				</u-empty>
			</template>
		</view>
		<cu-tabbar :currentTab="currentTab" :tabList="tabList"></cu-tabbar>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				emptyIcon: '',
				emptyTitle: '暂无记录',
				status: 'loadmore',
				statusArticle: 'loadmore',
				current: 0,
				activityList: [
				],
				articleList: [
				],
				tabsList: [
					{
						id: 0,
						name: '线下活动'
					},
					{
						id: 1,
						name: '活动回顾'
					},
				],
				tabList: [
				],
				currentTab: 2,
				params: {
					page: 1,
					order: '',
					sort: '',
					type: '',
				},
				paramsArticle: {
					page: 1,
					order: '',
					sort: '',
				},
			};
		},
		onShow() {
			this.emptyIcon = this.$configs.staticUrl + '/uploads/api/icon/img_qbt_kym.svg'
			this.tabList = this.$configs.tabList;
			if(this.current==0) {
				this.activityList = [];
				this.params.page = 1;
				this.status = 'loadmore';
				this.getActivityList();
			}
			else {
				this.articleList = [];
				this.paramsArticle.page = 1;
				this.statusArticle = 'loadmore';
				this.getArticleList();
			}
		},
		onPullDownRefresh() {
			console.log('refresh');
			if(this.current==0) {
				this.activityList = [];
				this.params.page = 1;
				this.status = 'loadmore';
				this.getActivityList();
			}
			else {
				this.articleList = [];
				this.paramsArticle.page = 1;
				this.statusArticle = 'loadmore';
				this.getArticleList();
			}
			setTimeout(function () {
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			if(this.status !== 'noMore') {
				if(this.current==0) {
					this.status = 'loading';
					this.params.page++;
					this.getActivityList()
				}
				else {
					this.statusArticle = 'loading';
					this.paramsArticle.page++;
					this.getArticleList()
				}
			}
		},
		methods:{
			loadmore() {
				if(this.status !== 'noMore') {
					if(this.current==0) {
						this.status = 'loading';
						this.params.page++;
						this.getActivityList()
					}
					else {
						this.statusArticle = 'loading';
						this.paramsArticle.page++;
						this.getArticleList()
					}
				}
			},
			getActivityList() {
				let that=this;
				uni.$u.api.activityList({ params: that.params}).then(res=>{
					console.log(res)
					if(that.activityList.length>0) {
						that.activityList = that.activityList.concat(res.data.data);
					}
					else {
						that.activityList = res.data.data;
					}
					if(res.data.current_page == res.data.last_page) {
						that.status = 'noMore';
					}
					else {
						that.status = 'loadmore';
					}
					console.log(that.status)
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			getArticleList() {
				let that=this;
				uni.$u.api.articleList({ params: that.params}).then(res=>{
					console.log(res)
					if(that.articleList.length>0) {
						that.articleList = that.articleList.concat(res.data.data);
					}
					else {
						that.articleList = res.data.data;
					}
					if(res.data.current_page == res.data.last_page) {
						that.statusArticle = 'noMore';
					}
					else {
						that.statusArticle = 'loadmore';
					}
					console.log(that.statusArticle)
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			changeStatus(e) {
				this.current = e.id;
				console.log(e);
				if(e.id == 0) {
					this.activityList = [];
					this.status = 'loadmore';
					this.params.page = 1;
					this.params.sort = '';
					this.params.order = '';
					this.getActivityList()
				}
				else {
					this.articleList = [];
					this.statusArticle = 'loadmore';
					this.paramsArticle.page = 1;
					this.paramsArticle.sort = '';
					this.paramsArticle.order = '';
					this.getArticleList()
				}
				console.log(this.current)
			},
		}
	}
</script>

<style>
	page {
		background-color:#F6F9FE;
	}
</style>
<style lang="scss">
	.video-box {
		
	}
</style>
