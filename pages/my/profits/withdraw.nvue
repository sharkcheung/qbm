<template>

	<view class="appraise">
		<view class="appraise-box">
			<view class="amount-box">当前剩余金额<text>￥{{ info.balance }}</text></view>
			
			<!-- 注意，如果需要兼容微信小程序，最好通过setRules方法设置rules规则 -->
			<u--form labelPosition="left" :model="modelApply" ref="formAppraise" labelWidth="80">
				<u-form-item label="提取金额" prop="money">
					<u--input placeholder="请输入要提取的金额" v-model="modelApply.money" border="none">
					</u--input>
				</u-form-item>
			</u--form>
		</view>
		<view class="button-box">
			<u-button type="primary" size="normal" shape="circle" text="提现" @click="submit"></u-button>
		</view>
		<view class="tips">单日最高可提现300元，超过300元，请隔日再提现。每日仅限提现一次。</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				info: {
					balance: 0,
				},
				modelApply: {
					money: '',
				},
				rules: {
					money: {
						type: 'number',
						required: true,
						message: '请填写要提现的金额',
						min: 1,
						trigger: ['blur', 'change']
					},
				}
			};
		},
		onShow() {
			this.info.balance = this.vuex_user.balance;
		},
		methods: {
			subcribeMsg() {
				let that = this;
				let withdraw_tmpl_id = that.$configs.withdraw_tmpl_id;
				uni.requestSubscribeMessage({
				  tmplIds: [withdraw_tmpl_id],
				  success (res) { 
					 that.withdraw();
				  },
				  fail (err) {
					 that.withdraw();
				  }
				})
			},
			submit() {
				let that = this;
				// 如果有错误，会在catch中返回报错信息数组，校验通过则在then中返回true
				this.$refs.formAppraise
					.validate()
					.then(res => {
						if(!parseFloat(that.modelApply.money)) {
							uni.$u.util.showErr('提现金额必须大于0');
							return false;
						}
						if(parseFloat(that.modelApply.money)>that.info.balance) {
							uni.$u.util.showErr('提现金额不能大于余额');
							return false;
						}
						that.subcribeMsg();
					})
					.catch(errors => {
						console.log(errors)
					});
			},
			withdraw() {
				let that = this;
				uni.$u.api.withdraw(that.modelApply).then(result => {
					let userinfo = that.vuex_user;
					userinfo.balance = uni.$u.util.jian(userinfo.balance, that.modelApply.money, 2);
					uni.$u.vuex('vuex_user', userinfo);
					uni.$u.route({
						type: 'redirectTo',
						url: '/pages/my/profits/withdraw_result',
						params: {
							order_num: result.data
						}
					})
				})
				.catch(err => {
					console.log(err);
					uni.$u.util.showErr('提现申请失败');
				})
			}
		},
		onReady() {
			//如果需要兼容微信小程序，并且校验规则中含有方法等，只能通过setRules方法设置规则。
			this.$refs.formAppraise.setRules(this.rules);
		}
	}
</script>
<style>
	page {
		background-color: #f8f8f8;
	}
</style>
<style lang="scss">
	.appraise {
		padding: 20rpx 32rpx;
	}
	.appraise-box {
		padding: 32rpx;
		align-items: center;
		border-radius: 12rpx;
		background-color: #fff;
		box-shadow: 0rpx 6rpx 16rpx 0rpx rgba(0, 0, 0, 0.04);
		.amount-box {
			color: #333;
			text {
				margin-top: 20rpx;
				margin-bottom: 20rpx;
				font-size: 48rpx;
			}
			margin-top: 30rpx;
			align-items: center;
		}
	}
	.button-box {
		margin-top: 30rpx;
		width: 100%;
	}
	.tips {
		color: #bdbdbd;
		font-size: 24rpx;
		margin-top: 16rpx;
		padding: 16rpx 32rpx;
	}
</style>
