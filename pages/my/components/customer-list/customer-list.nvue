<template>
	<view>
		<view class="customer-item" v-for="(item, index) in listData" :key="index" @click="openPage('/pages/my/customer/info', item)">
			<view class="customer-item-bottom">
				<text class="customer-num">订单号：{{ item.order_num }}</text>
				<text>{{ item.create_time | date('yyyy-mm-dd hh:MM:ss') }}</text>
			</view>
			<view class="customer-item-top">
				<view class="customer-item-top-left">
					<u-avatar shape="circle" size="48" :src="item.membe_pic" customStyle="margin: 0 15px -3px 0"></u-avatar>
					<view class="customer-item-top-left-title">
						{{ item.service_type_name }}-{{ item.service_name }}{{ vuex_user.teacher&&Object.keys(vuex_user.teacher).length>0 ?'':'-'+item.teacher_name }}
						<text>{{ item.membe_name }}</text>
					</view>
				</view>
				<view class="customer-item-top-right"><u--text :text="$u.util.getStatus(item.status,1)" :color="$u.util.getStatus(item.status,2)"></u--text></view>
			</view>
			<view class="customer-residue-time" v-if="$u.util.formatRemainTime(item.begin_time)!==''&&item.status == 3">
				距离{{ item.service_type_name }}还有：<text>{{ $u.util.formatRemainTime(item.begin_time) }}</text>
			</view>
		</view>
	</view>
</template>

<script>
export default {
	name: 'customer-list',
	props: {
		listData: Array
	},
	data() {
		return {
			timeData: []
		};
	},
	mounted() {
		console.log(this.listData);
	},
	methods: {
		appraise(e) {
			e.preventDefault();
			this.openPage('/pages/my/appraise/appraise')
		},
		onChange(e, index) {
			this.timeData[index] = e
		},
		openPage(path, params) {
			uni.$u.route({
				url: path,
				params: {
					order_num: params.order_num
				}
			});
		},
		getStatus(status) {
			let title = '';
			switch (status) {
				case 1:
					title = '待支付';
					break;
				case 2:
					title = '待确认';
					break;
				case 3:
					title = '待开始';
					break;
				case 4:
					title = '已结束';
					break;
				default:
					break;
			}
			return title;
		},
		getColor(status) {
			let color = '#303133';
			switch (status) {
				case 1:
					// 待支付
					color = '#ffaa00';
					break;
				case 2:
					// 待确认
					color = '#55aa7f';
					break;
				case 3:
					// 待开始
					color = '#aa5500';
					break;
				case 4:
					// 已结束
					color = '#ccd0d8';
					break;
				default:
					break;
			}
			return color;
		},
		getButtonName(status) {
			let buttonName = '';
			switch (status) {
				case 1:
					// 待支付
					buttonName = '去支付';
					break;
				case 2:
					// 待确认
					buttonName = '';
					break;
				case 3:
					// 待开始
					buttonName = '#aa5500';
					break;
				case 4:
					// 已结束
					buttonName = '#ccd0d8';
					break;
				default:
					break;
			}
			return buttonName;
		}
	}
};
</script>

<style lang="scss">
.customer-item {
	padding: 32rpx;
	bcustomer-radius: 16rpx;
	background-color: #f9f9f9;
	margin-top: 24rpx;
	.customer-item-top {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		.customer-item-top-left {
			flex-direction: row;
			.customer-item-top-left-title {
				font-size: 32rpx;
				text {
					font-size: 24rpx;
					margin-top: 8rpx;
					color: #a6a6a6;
				}
			}
		}
	}

	.customer-item-bottom {
		flex-direction: row;
		justify-content: space-between;
		margin-bottom: 32rpx;
		color: #a6a6a6;
		font-size: 24rpx;
	}
	.button-group {
		margin-top: 32rpx;
		flex-direction: row;
	}
	.customer-residue-time {
		margin-top: 32rpx;
		flex-direction: row;
		font-size: 24rpx;
		color: #878787;
		view {
			flex-direction: row;
		}
	}
}
</style>
