<template>
	<view>
		<view v-if="play" class="video-box">
			<video style="width: 100%;" :src="info.video" :autoplay="true"></video>
		</view>
		<view v-if="!play" class="image-box" @click="playVideo">
			<view class="mask"></view>
			<u--image width="100%" :src="info.pic"></u--image>
			<view class="play-btn"><u-icon name="play-circle" color="#fff" size="60"></u-icon></view>
		</view>
		<view class="video-intro">
			<view class="video-title">{{ info.course_name }}</view>
			<view class="video-teacher" @click="goPage('/pages/teacher/homepage')">主讲老师：{{ info.teacher.teacher_name }}</view>
			<view class="video-tip"><text>{{ info.views||0 }}人已学</text><text>{{ info.sale_price ? info.sale_price : '免费' }}</text></view>
		</view>
		<u-gap height="10" bgColor="#efefef"></u-gap>
		<view class="video-list-box" :style="{marginBottom: $u.util.isIphoneX() ? '168rpx' : '120rpx' }">
			<view class="videl-else">其他课程</view>
			<video-list :listData="courseList"></video-list>
			<u-loadmore :status="status" marginBottom="18" @loadmore="loadmore"/>
		</view>
		<view class="bottom-button-box">
			<view class="bottom-button-group">
				<u-button icon="share" type="primary" openType="share" text="推荐好友"></u-button>
				<u-button icon="coupon" type="warning" text="立即购买" @click="buy" v-if="info.sale_price>0&&!info.isBuy"></u-button>
			</view>
			<u-safe-bottom></u-safe-bottom>
		</view>
		<u-popup :show="showBuy" round="16" :closeable="true" @close="closeBuy">
			<view class="show-buy">
				<view class="item-box"><text>课程费用</text>￥{{ info.sale_price }}</view>
				<view class="item-box"><text>账户余额</text>￥{{ vuex_user.balance }}</view>
				<view class="item-box">
					<text>支付方式</text>
					<u-radio-group
						slot="value"
						v-model="payType"
						@change="payTypeChange">
						<u-radio label="微信支付" :name="0"></u-radio>
						<u-radio label="余额支付" :name="1"></u-radio>
						<!-- <u-radio label="积分支付"></u-radio> -->
					</u-radio-group>
				</view>
				
				<view class="buy-button"><u-button shape="circle" type="warning" :disabled="checkBuy" text="确认购买" @click="confirmBuy"></u-button></view>
			</view>
		</u-popup>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				status: 'loadmore',
				play: false,
				showBuy: false,
				payType: 0,
				info: {
					title: '',
					views: 0,
					video: '',
					pic: '',
					sale_price: 0,
					isBuy: true,
				},
				courseList: [
				],
				id: '',
				paramsCourse: {
					page: 1,
					id: '',
					teacher_id: '',
				},
			};
		},
		computed:{
			checkBuy() {
				if(this.payType == 1) {
					if(Number(this.info.sale_price)>Number(this.vuex_user.balance)) {
						return true;
					}
					else {
						return false;
					}
				}
				else {
					return false;
				}
			}
		},
		onLoad(options) {
			let that = this;
			that.id = options.id;
		},
		onShow() {
			let that = this;
			that.paramsCourse.page = 1;
			that.courseList = [];
			uni.$u.api.courseDetail({
					params: {
						id: that.id
					}
				}).then(res => {
					that.info = res.data;
					that.paramsCourse.id = that.id
					that.paramsCourse.teacher_id = that.info.teacher_id
					that.getCourseList();
					uni.$u.mpShare.title = that.info.course_name;
					uni.$u.mpShare.path = 'pages/course/info?id='+that.info.id+'&invite_id='+that.vuex_user.membe_id;
				})
				.catch(err => {})
		},
		methods:{
			closeBuy() {
				this.showBuy = false;
			},
			confirmBuy() {
				let that=this;
				uni.$u.api.coursePay({params: { id: that.info.id, payType: that.payType }}).then(res=>{
					if(that.payType == 1) {
						
						uni.showToast({
							title: '购买成功',
							icon: 'success'
						});
						let userinfo = that.vuex_user;
						userinfo.balance = parseFloat(userinfo.balance-that.info.sale_price).toFixed(2);
						that.$u.vuex('vuex_user', userinfo)
						that.info.isBuy = true;
						that.showBuy = false;
						return false;
					}
					// #ifdef MP-WEIXIN
					uni.requestPayment({
						provider: 'wxpay',
						timeStamp: String(res.data.timeStamp),
						nonceStr: res.data.nonceStr,
						package: res.data.package,
						signType: res.data.signType,
						paySign: res.data.paySign,
						success: function(ret) {
							console.log(res);
							uni.$u.api.updateCourseOrder({params: { order_num: res.data.out_trade_no }});
							uni.showToast({
								title: '购买成功',
								icon: 'success'
							});
							that.info.isBuy = true;
							that.showBuy = false;
							
						},
						fail: function (err) {
							console.log(err)
							if(err.errMsg == 'requestPayment:fail cancel') {
								that.$u.util.showErr('已取消支付')
							}
							else {
								that.$u.util.showErr('支付失败')
							}
						}
					});
					// #endif
				})
				.catch(err=>{
					console.log(err)
					if(that.payType == 1) {
						that.$u.util.showErr(err.msg);
					}
					else {
						that.$u.util.showErr('支付请求失败')
					}
				})
			},
			payTypeChange(e) {
				if(e==1) {
					if(Number(this.info.sale_price)>Number(this.vuex_user.balance)) {
						uni.showToast({
							icon:'error',
							title: '余额不足'
						})
					}
				}
			},
			loadmore() {
				if(this.status !== 'noMore') {
					this.status = 'loading';
					this.params.page++;
					this.getCourseList();
				}
			},
			goPage(url) {
				uni.$u.route({
					url: url,
					params: { id: this.info.teacher_id }
				})
			},
			buy() {
				if(!this.vuex_token) {
					uni.showToast({
						icon:'error',
						title: '请先登录'
					})
					setTimeout(()=>{
						this.$u.util.goLogin();
					}, 1000)
				}
				else {
					this.showBuy = true;
				}
			},
			getCourseList() {
				let that=this;
				uni.$u.api.courseList({ params: that.paramsCourse}).then(res=>{
					if(that.courseList.length>0) {
						that.courseList = that.courseList.concat(res.data.data);
					}
					else {
						that.courseList = res.data.data;
					}
					if(res.data.current_page == res.data.last_page) {
						that.status = 'noMore';
					}
					else {
						that.status = 'loadmore';
					}
					console.log(that.status)
				})
				.catch(err=>{
					uni.hideLoading()
				})
			},
			playVideo(){
				if(!this.vuex_token){
					this.$u.util.showErr('请先登录')
					return false;
				}
				if(this.info.sale_price>0&&!this.info.isBuy){
					this.$u.util.showErr('请先购买再观看')
					return false;
				}
				this.play = true;
				uni.$u.api.updateStudyNums({params: {id:this.id}}).then(res=>{
					console.log(res);
				})
			}
		}
	}
</script>

<style lang="scss">
	video{
	  width: 100%;
	}
	
	.video-intro {
		padding: 32rpx 24rpx;
		.video-tip {
			color: #a6a6a6;
			font-size: 24rpx;
			margin-top: 12rpx;
			flex-direction: row;
			justify-content: space-between;
			text:last-child {
				color:#c00;
			}
		}
		.video-teacher {
			color: #565656;
			font-size: 28rpx;
			margin-top: 12rpx;
		}
	}
	
	.video-list-box {
		padding: 24rpx;
		.videl-else {
			margin-bottom: 16rpx;
		}
	}
	
	.image-box {
		position: relative;
		.mask {
			left: 0;
			top: 0;
			right: 0;
			bottom: 0;
			position: absolute;
			background-color: #000000;
			opacity: 0.5;
			z-index: 9;
			pointer-events: none;
		}
		.play-btn {
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			z-index: 999;
			
		}
	}
	
	.bottom-button-box {
		position: fixed;
		width: 100%;
		bottom: 0;
		left: 0;
		z-index: 999;
		background-color: #ffffff;
	
		.bottom-button-group {
			flex-direction: row;
	
			.u-button--square {
				border-radius: 0;
			}
		}
	}
	.show-buy {
		padding: 80rpx 0 32rpx 0;
		align-items: center;
		.item-box {
			padding: 32rpx;
			width: 100%;
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
			.u-radio-group {
				justify-content: flex-end;
				.u-radio:last-child {
					margin-left: 16rpx;
				}
			}
		}
		.buy-button {
			width: 100%;
			padding: 48rpx 32rpx 0rpx 32rpx;
		}
	}
</style>
