<template>
	<view>
		<view class="order-box">
			<!-- 注意，如果需要兼容微信小程序，最好通过setRules方法设置rules规则 -->
			<u--form labelPosition="left" :model="modelOrder" ref="formOrder" labelWidth="100">
				<u-form-item label="姓名" prop="teacher_name" ref="item1">
					<u--input v-model="modelOrder.teacher_name" border="none" disabled disabledColor="#ffffff"></u--input>
				</u-form-item>
				<u-form-item
					label="预约服务"
					prop="service_name"
					@click="
						showService = true;
						hideKeyboard();
					"
					ref="itemService"
				>
					<u--input v-model="modelOrder.service_name" disabled disabledColor="#ffffff" placeholder="请选择预约服务" border="none"></u--input>
					<u-icon slot="right" name="arrow-right"></u-icon>
				</u-form-item>
				<u-form-item label="公司名称" prop="company_name" ref="itemCompanyName"><u--input v-model="modelOrder.company_name"></u--input></u-form-item>
				<u-form-item label="行业" prop="industry" ref="itemIndustry"><u--input v-model="modelOrder.industry"></u--input></u-form-item>
				<u-form-item label="团队情况" prop="team_info" ref="item3"><u--textarea placeholder="不低于3个字" v-model="modelOrder.team_info" count></u--textarea></u-form-item>
				<u-form-item
					label="项目启动时间"
					prop="start_time"
					@click="
						show = true;
					"
				>
					<u--input v-model="modelOrder.start_time" disabled disabledColor="#ffffff" placeholder="请选择项目启动时间" border="none"></u--input>
					<u-icon slot="right" name="arrow-right"></u-icon>
				</u-form-item>
				<u-form-item label="咨询简述" prop="intro" ref="item3"><u--textarea placeholder="不低于3个字" v-model="modelOrder.intro" count></u--textarea></u-form-item>
			</u--form>
		</view>
		<view class="bottom-button-box">
			<view class="bottom-button-group"><u-button type="primary" text="确认预约" @click="submit"></u-button></view>
			<u-safe-bottom></u-safe-bottom>
		</view>

		<u-action-sheet :show="showService" :actions="actions" title="请选择预约服务" @close="showService = false" @select="serviceSelect"></u-action-sheet>
		<!-- <u-calendar :show="showCalendar" minDate="1950-01-01" defaultDate="" @confirm="calendarConfirm" @close="calendarClose"></u-calendar> -->
		<u-datetime-picker
		ref="datetimePicker"
				:show="show"
				v-model="value"
				@confirm="confirm"
				mode="date"
		></u-datetime-picker>
	</view>
</template>

<script>
export default {
	data() {
		return {
			value: Number(new Date()),
			show: false,
			actions: [
				{
					id: 1,
					name: '数字系统'
				},
				{
					id: 2,
					name: '全域规划'
				},
				{
					id: 3,
					name: '私域运营'
				},
				{
					id: 4,
					name: '活动策划'
				},
				{
					id: 5,
					name: '文案创意'
				},
				{
					id: 6,
					name: '服务规范'
				},
				{
					id: 7,
					name: '组织结构'
				},
				{
					id: 8,
					name: '团队绩效'
				}
			],
			showCalendar: false,
			modelOrder: {
				teacher_id: '',
				teacher_name: '',
				service_type_id: '',
				service_id: '',
				service_name: '',
				company_name: '',
				industry: '',
				team_info: '',
				start_time: '',
				intro: ''
			},
			showService: false,
			rules: {
				service_type_id: {
					type: 'string',
					required: true,
					message: '请选择预约服务',
					trigger: ['blur', 'change']
				},
				company_name: {
					type: 'string',
					required: true,
					message: '请填写公司名称',
					trigger: ['blur', 'change']
				},
				industry: {
					type: 'string',
					required: true,
					message: '请填写行业',
					trigger: ['blur', 'change']
				},
				team_info: {
					type: 'string',
					required: true,
					message: '请填写团队情况',
					trigger: ['blur', 'change']
				},
				start_time: {
					type: 'string',
					required: true,
					message: '请选择项目启动时间',
					min: 2,
					trigger: ['change']
				}
			}
		};
	},
	onLoad(options) {
		this.getServiceList();
		console.log(options);
		let title = ''
		if(options.service_type_id == 1) {
			title = '约聊下单'
		}
		else if(options.service_type_id == 2) {
			title = '内训下单'
		}
		else {
			title = '陪跑下单'
		}
		uni.setNavigationBarTitle({
			title: title
		});
		this.modelOrder.company_name = options.company_name;
		this.modelOrder.service_type_id = options.service_type_id;
		this.modelOrder.service_type_name = options.service_type_name;
		this.modelOrder.teacher_name = options.teacher_name;
		this.modelOrder.teacher_id = options.teacher_id;
		
	},
	methods: {
		getServiceList() {
			let that=this;
			uni.$u.api.serviceAll().then(res=>{
				that.actions = res.data;
			})
			.catch(err=>{
			})
		},
		formatter(type, value) {
			if (type === 'year') {
				return `${value}年`
			}
			if (type === 'month') {
				return `${value}月`
			}
			if (type === 'day') {
				return `${value}日`
			}
			return value
		},
		hideKeyboard() {
			uni.hideKeyboard();
		},
		submit() {
			let that = this;
			// 如果有错误，会在catch中返回报错信息数组，校验通过则在then中返回true
			this.$refs.formOrder
				.validate()
				.then(res => {
					
					uni.showLoading({
						title: '正在提交数据'
					})
					uni.$u.api.order(that.modelOrder).then(result=>{
						console.log(result)
						uni.hideLoading()
						uni.$u.route({
							url: '/pages/teacher/order_result',
							params: {
								order_num: result.data
							}
						})
					})
					.catch(err=>{
						uni.hideLoading()
						uni.$u.util.showErr('下单失败');
					})
				})
				.catch(errors => {
					console.log(errors)
				});
		},
		serviceSelect(e) {
			this.modelOrder.service_name = e.name;
			this.modelOrder.service_id = e.id;
			this.$refs.formOrder.validateField('service_id');
		},
		confirm(e) {
			this.modelOrder.start_time = uni.$u.timeFormat(e.value, 'yyyy-mm-dd');
			this.show = false;
		},
		calendarConfirm(e) {
			this.showCalendar = false;
			this.modelOrder.start_time = e[0];
		},
		calendarClose() {
			this.showCalendar = false;
			this.$refs.formOrder.validateField('service_id');
		}
	},
	onReady() {
		//如果需要兼容微信小程序，并且校验规则中含有方法等，只能通过setRules方法设置规则。
		this.$refs.formOrder.setRules(this.rules);
		// 微信小程序需要用此写法
		this.$refs.datetimePicker.setFormatter(this.formatter)
	}
};
</script>

<style lang="scss">
.order-box {
	padding: 32rpx;
}
.bottom-button-box {
	position: fixed;
	width: 100%;
	bottom: 0;
	left: 0;
	z-index: 999;
	background-color: #ffffff;
	.bottom-button-group {
		margin: 0 32rpx;
		flex-direction: row;
		.u-button--square {
			border-radius: 20rpx;
		}
	}
}
</style>
