<template>
	<div>
		<u-sticky bgColor="#fff">
			<u-tabs :list="listTab" :inactiveStyle="{color: '#737D96'}" :activeStyle="{color: '#434E5E',fontWeight: 'bold'}" itemStyle="height:100rpx;font-size:32rpx;padding-left: 40rpx; padding-right: 40rpx;" lineColor="#F35917" lineWidth="30" @click="clickTab"></u-tabs>
		</u-sticky>
		<view :style="{marginBottom: $u.util.isIphoneX() ? '148rpx' : '60rpx' }">
			<template v-if="current==0">
				<u-gap height="10" bgColor="#F6F9FE"></u-gap>
				<view class="teacher-container">
					<view class="teacher-top flex-row">
						<u-avatar size="80" shape="square" :src="info.avatar_url" customStyle="border-radius:20rpx;">
						</u-avatar>
						<view class="teacher-top-title">
							<view class="teacher-name flex-row justify-between">{{ info.teacher_name }}<view class="share flex-row align-center" v-if="vuex_user.agent" @click="showShare=true"><u-icon label="分享" color="#00b500" size="22" name="weixin-fill" labelSize="12"></u-icon></view></view>
							<text class="tag-title" v-for="(item_title, idx) in info.resume" :key="idx">{{ item_title }}</text>
						</view>
					</view>
					<view class="line-view"><text></text></view>
					<view class="padding-box">
						<view class="item-box flex-row teacher-mark">
							<view class="item-title">星级评分：</view>
							<view class="item-value justify-center">
								<u-rate :value="info.mark" readonly activeColor="#f9ae3d"></u-rate>
							</view>
						</view>
						<!-- <view class="item-box flex-row">
							<view class="item-title">个人履历：</view>
							<view class="item-value resume">{{ info.resume }}</view>
						</view> -->
						<!-- <view class="item-box flex-row">
							<view class="item-title">个人履历：</view>
							<view class="item-value honor flex-row"><text v-for="(item_item, index_item) in info.resume" :key="index_item">{{ item_item }}</text></view>
						</view> -->
						
						<view class="item-box flex-row teacher-skill">
							<view class="item-title">擅长项目：</view>
							<view class="item-value">
								<view class="scroll-list flex-row flex-wrap">
									<text v-for="(item_item, index_item) in info.service" :key="index_item">{{ item_item.name }}</text>
								</view>
							</view>
						</view>
					</view>
					<!-- <view class="teacher-bottom">可免费约聊时长：{{ info.duration }} 分钟</view> -->
				</view>
				<u-gap height="10" bgColor="#F6F9FE" v-if="info.detail"></u-gap>
				<view class="detail-box" v-if="info.detail">
					<u-parse :content="info.detail"></u-parse>
				</view>
	<!-- 			<view class="button-group">
					<u-button v-for="(item,index) in info.service_type" :key="index"
						:type="item.id==1?'primary':item.id==2?'warning':'error'" :text="'我要'+item.name"
						@click="order(item)"></u-button>
				</view> -->
				<!-- <view class="comment-box" v-for="(item,index) in info.comment" :key="index">
					<view class="comment-top">
						<view class="comment-top-left">
							<u-avatar shape="circle" size="20" :src="info.avatar_url" customStyle="margin: 0px 5px 0px 0px">
							</u-avatar>
							{{ info.nick_name }}
						</view>
						<view class="comment-top-right">{{ info.create_time }}</view>
					</view>
					<view class="comment-content">{{ info.content }}</view>
				</view>
				<view class="comment-view-all" @click="viewAllComment">{{ info.comment.length >0 ? '查看全部评价' : '暂无评价' }}
				</view> -->
			</template>
			<template v-if="current==1">

				<view v-if="commentList.length>0" class="comment-box comment-item" v-for="(item, index) in commentList" :key="index">
					<view class="comment-top">
						<view class="comment-top-left">
							<u-avatar shape="circle" size="20" :src="item.pic" customStyle="margin: 0px 5px 0px 0px">
							</u-avatar>
							{{ item.nickname }}
						</view>
						<view class="comment-top-right">{{ item.create_time }}</view>
					</view>
					<view class="comment-content">{{ item.content }}</view>
				</view>
				<u-empty text='暂无评价' :show="commentList.length==0" mode="data" :icon="emptyIcon"></u-empty>
				<u-loadmore v-if="commentList.length>0" color="#868E9D" fontSize="12" :status="statusComment" marginBottom="20" marginTop="20" @loadmore="loadmoreComment"/>
			</template>
			<template v-if="current==2">
				<u-empty text='暂无课程' :show="courseList.length==0" mode="data" :icon="emptyIcon"></u-empty>
				<view class="video-box" v-if="courseList.length>0">
					<video-list :listData="courseList"></video-list>
					<u-loadmore v-if="courseList.length>0" color="#868E9D" fontSize="12" :status="status" marginBottom="20" marginTop="20" @loadmore="loadmore"/>
				</view>
			</template>
		</view>
		<view class="bottom-button-box">
			<view class="bottom-button-group">
				<template v-for="(item,index) in info.service_type">
				<view :key="index" :style="info.service_type.length==1?'width:100%':''" class="chat-button-view flex-row justify-center" v-if="item.id==1" @click="order(item)"><u-icon labelPos="right" labelColor="#fff" :label="item.name" size="36" :name="chatImg" labelSize="16" @click="order(item)"></u-icon></view>
				<view :key="index" v-else class="button-view"><u-icon labelPos="bottom" :label="item.name" size="29" :name="item.picture" labelColor="#868E9D" labelSize="12" space="0" @click="order(item)"></u-icon></view>
				</template>
			</view>
			<u-safe-bottom></u-safe-bottom>
		</view>
		
		<u-modal :show="show" :closeOnClickOverlay="true" title="温馨提示" @close="close" :content="content">
			<u-button slot="confirmButton" color="linear-gradient(270deg, #FFC37C 0%, #EE5929 100%);" :text="confirmText" shape="circle" @click="confirmClick">
			</u-button>
		</u-modal>
		<u-popup :show="showShare" @close="closeShare" round="16">
			<view class="show-share-box">
				<view class="show-main-box">
					<view class="show-main-item">
						<button openType="share">
						<view class="show-main-icon">
							
							<u-icon color="#00b500" size="32" name="weixin-fill"></u-icon>
						</view>
						微信好友
						</button>
					</view>
					<view class="show-main-item" @click="generatePoster">
						<view class="show-main-icon">
							<u-icon color="#ff5500" size="32" name="photo-fill"></u-icon>
						</view>
						生成海报
					</view>
					
				</view>
				<view class="show-cancel" @click="showShare=false">取消</view>
			</view>
		</u-popup>
		<u-popup zIndex="10072" :show="showPoster" :closeable="true" @close="closeshowPoster">
			<view class="show-box">
				<u--image :showLoading="true" mode="aspectFit" :src="poster" height="360px"></u--image>
				<text>保存图片到相册 分享到朋友圈吧</text>
				<u-button type="warning" shape="circle" text="保存到相册" @click="savePhoto"></u-button>
			</view>
		</u-popup>
	</div>
</template>

<script>
	export default {
		data() {
			return {
				id: '',
				chatImg: '',
				status: 'loadmore',
				statusComment: 'loadmore',
				poster: '',
				emptyIcon: '',
				listPng: '',
				modalType: 0,
				showPoster: false,
				show: false,
				showShare: false,
				current: 0,
				showCancelButton: false,
				confirmText: '去登录',
				content: '您还没有登录,暂时无法进行下单',
				commentList: [
				],
				courseList: [
				],
				info: {
					avatar_url: '',
					teacher_name: '',
					title: '',
					resume: '',
					honor: '',
					service: [],
					service_type: [],
					mark: 0,
					duration: 0,
					comment: [],
				},
				listTab: [{
						name: '老师简介'
					},
					{
						name: '用户口碑'
					},
					{
						name: '视频课程'
					}
				],
				params: {
					page: 1,
					teacher_id: '',
				},
				paramsComment: {
					page: 1,
					teacher_id: '',
				}
			};
		},
		onPullDownRefresh() {
			console.log('refresh');
			if(this.current == 2) {
				this.params.page = 1;
				this.status = 'loadmore';
				this.getCourseList();
			}
			if(this.current == 1) {
				this.paramsComment.page = 1;
				this.statusComment = 'loadmore';
				this.getCommentList();
			}
			setTimeout(function () {
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			if(this.current == 2) {
				if(this.status !== 'noMore') {
					this.status = 'loading';
					this.params.page++;
					this.getCourseList()
				}
			}
			if(this.current == 1) {
				if(this.statusComment !== 'noMore') {
					this.statusComment = 'loading';
					this.paramsComment.page++;
					this.getCommentList()
				}
			}
		},
		onShow() {
			this.chatImg = this.$configs.staticUrl + '/uploads/api/icon/icon_qbt_yl.svg';
			this.emptyIcon = this.$configs.staticUrl + '/uploads/api/icon/img_qbt_kym.svg';
			this.showShare = false;
			this.showPoster = false;
			uni.showLoading({
				title: '数据加载中...'
			})
			let that = this;
			uni.$u.api.teacherHome({
					params: {
						id: that.id,
					}
				}).then(res => {
					console.log(res)
					that.info = res.data.info;
					that.params.teacher_id = that.info.id;
					that.paramsComment.teacher_id = that.info.id;
					uni.$u.mpShare.title = that.info.teacher_share_title||'企帮通名师推荐';
					uni.$u.mpShare.path = 'pages/teacher/homepage?id='+that.info.id+'&invite_id='+that.vuex_user.membe_id;
					uni.hideLoading()
				})
				.catch(err => {
					uni.hideLoading()
					that.$u.util.showErr('头像上传失败');
				})
		},
		onLoad(options) {
			console.log(options);
			this.id = options.id;
			if(options.invite_id) {
				uni.$u.vuex('invite_id', options.invite_id);
			}
		},
		methods: {
			loadmore() {
				if(this.status !== 'noMore') {
					this.status = 'loading';
					this.params.page++;
					this.getCourseList()
				}
			},
			loadmoreComment() {
				if(this.statusComment !== 'noMore') {
					this.statusComment = 'loading';
					this.paramsComment.page++;
					this.getCommentList()
				}
			},
			getCourseList() {
				let that=this;
				uni.$u.api.courseList({ params: that.params}).then(res=>{
					console.log(res)
					if(that.courseList.length>0) {
						that.courseList = that.courseList.concat(res.data.data);
					}
					else {
						that.courseList = res.data.data;
					}
					if(res.data.current_page == res.data.last_page) {
						that.status = 'noMore';
					}
					else {
						that.status = 'loadmore';
					}
					console.log(that.status)
				})
				.catch(err=>{
					that.status = 'loadmore';
					that.$u.util.showErr('数据加载失败');
				})
			},
			closeShare() {
				this.showShare = false;
			},
			closeshowPoster() {
				this.showPoster = false;
			},
			/* 授权提示 ，这里就是重复提示用户去授权*/
			opensit() {
			    uni.showModal({
			        content: '由于您还没有允许保存图片到您相册里,这无法进行分享操作点击确定去允许授权',
			        success: function(res) {
			            if (res.confirm) {
			                /* 这个就是打开设置的API*/
			                uni.openSetting({
			                    success(res) {
			                        console.log(res.authSetting);
			                    }
			                });
			            } else if (res.cancel) {
			                uni.showModal({
			                    cancelText: '依然取消',
			                    confirmText: '重新授权',
			                    content: '很遗憾你点击了取消，这将无法进行分享操作，请慎重考虑',
			                    success: function(res) {
			                        if (res.confirm) {
			                            uni.openSetting({
			                                success(res) {
			                                    console.log(res.authSetting);
			                                }
			                            });
			                        } else if (res.cancel) {
			                            console.log('用户不授权');
			                        }
			                    }
			                });
			            }
			        }
			    });
			},
			savePhoto() {
				let that = this;
				/* 如果是这么写的，可以不使用button设置open-type属性*/
				/* 判断是否授权 */
				uni.authorize({
				    /* 这个就是保存相册的 */
				    scope: 'scope.writePhotosAlbum',
				    success() {
				        /* 保存图片方法 */
						
				        that.save();
				    },
				    complete(res) {
				        console.log(res);
				        /* 这里判断一下如果没有授权重新打开设置选项 */
				        uni.getSetting({
				            success(res) {
				                if (!res.authSetting['scope.writePhotosAlbum']) {
				                    /* 打开设置的方法 */
				                    that.opensit();
				                }
				            }
				        });
				    }
				});
			},
			save() {
				let that = this
				uni.downloadFile({
					url: that.poster,
					success: function(res) {
						console.log(res);
						
						uni.saveImageToPhotosAlbum({
						 filePath: res.tempFilePath,
							success(res) {
								uni.showToast({
									title: '保存成功',
									icon: "success",
									duration: 1000
								})
							},
							fail(err) {
								console.log(err);
								if(err.errMsg=='saveImageToPhotosAlbum:fail auth deny') {
									that.showPoster = false;
									that.show = true;
									that.modalType = 999;
									that.content = '需要您授权保存相册';
									that.confirmText = '去授权';
									return false;
								}
							}
						})
					}
				})
			},
			generatePoster() {
				this.showShare = false;
				this.showPoster = true;
				uni.showLoading({
					title: '正在生成...'
				})
				let that = this;
				uni.$u.api.generatePoster({
						params: {
							id: that.info.id
						}
					}).then(res => {
						console.log(res)
						that.poster = res.data + '?r='+ Math.random();
						uni.hideLoading()
					})
					.catch(err => {
						uni.hideLoading()
						that.$u.util.showErr('生成失败');
					})

			},
			close() {
				this.show = false;
			},
			confirmClick() {
				let that = this;
				that.show = false;
				if (this.modalType == 0) {
					uni.$u.route({
						url: '/pages/public/login'
					})
				} else if (this.modalType == 1) {
					uni.$u.route({
						url: '/pages/my/verify',
						params: {
							type: 2
						}
					})
				} else if (this.modalType == 2) {
					uni.$u.route({
						url: '/pages/my/perfection'
					})
				}
				else {
					uni.openSetting({
						success(settingdata) {
							if (settingdata.authSetting['scope.writePhotosAlbum']) {
								uni.showToast({
									title: '获取权限成功,再次保存图片即可成功',
								})
							} else {
								uni.showToast({
									title: '获取权限失败，无法保存到相册',
									icon: 'none'
								})
							}
							that.showPoster = true;
						}
					})
				}
			},
			order(item) {
				if (!this.vuex_token) {
					this.modalType = 0;
					this.show = true;
					this.content = '您还没有登录,暂时无法进行下单';
					this.confirmText = '去登录';
					return false;
				}
				if (!this.vuex_user.mobile) {
					this.modalType = 2;
					this.show = true;
					this.content = '请先完善信息再下单';
					this.confirmText = '去完善';
					return false;
				}

				uni.showLoading({
					title: '数据请求中...'
				})
				let that = this;
				uni.$u.api.checkUserOrder({
						params: {
							teacher_id: item.id
						}
					}).then(res => {
						uni.hideLoading()
						if (res.msg !== '') {
							that.modalType = 1;
							that.show = true;
							that.confirmText = '去认证';
							that.content = res.msg;
							return false;
						}
						that.goPage('/pages/teacher/order', {
							company_name: res.data.company_name,
							service_type_id: item.id,
							service_type_name: item.name,
							teacher_id: that.info.id,
							teacher_name: that.info.teacher_name
						})
					})
					.catch(err => {
						uni.hideLoading()
						that.$u.util.showErr(err.msg);
					})
			},
			viewAllComment() {
				if (this.info.comment.length > 0) {
					this.current = 1
				}
			},
			clickTab(item) {
				this.current = item.index
				if(this.current==1) {
					if(this.commentList.length==0) {
						this.paramsComment.page = 1;
						this.getCommentList()
					}
				}
				if(this.current==2) {
					if(this.courseList.length==0) {
						this.params.page = 1;
						this.getCourseList()
					}
				}
				console.log(item)
			},
			getCommentList() {
				
				let that = this;
				uni.$u.api.appraiseList({
						params: that.paramsComment
					}).then(res => {
						if(that.commentList.length>0) {
							that.commentList = that.commentList.concat(res.data.data);
						}
						else {
							that.commentList = res.data.data;
						}
						if(res.data.current_page == res.data.last_page) {
							that.statusComment = 'noMore';
						}
						else {
							that.statusComment = 'loadmore';
						}
					})
					.catch(err => {
						that.statusComment = 'loadmore';
						that.$u.util.showErr('数据加载失败');
					})
			},
			goPage(path, params) {
				uni.$u.route({
					url: path,
					params: params
				})
			}
		}
	};
</script>

<style lang="scss">
	.teacher-container {
		background-color: #fff;

		.item-box {
			margin-top: 20rpx;
			.item-title {
				font-weight: bold;
				color: rgba(67, 78, 94, 1)
			}
			.item-value {
				flex: 1;
				font-weight: bold;
				color: #434E5E;
			}
			.resume {
				line-height: 150%;
				font-weight: normal;
			}
			.honor {
				color:#F35917;
				gap: 40rpx;
			}
		}

		.teacher-top {
			padding: 30rpx 30rpx 26rpx 30rpx;

			.teacher-top-title {
				margin-left: 30rpx;
				flex:1;
				.teacher-name {
					width: 100%;
					margin-bottom: 2rpx;
					font-weight: bold;
					font-size: 32rpx;
					color: #434E5E;
					.share {
						background: #F5F5F5;
						color: #434E5E;
						border-radius: 24rpx;
						padding: 6rpx 14rpx;
					}
				}

				font-size: 32rpx;

				.tag-title {
					font-size: 24rpx;
					margin-top: 12rpx;
					color: #868E9D;
				}
			}
		}
		
		.line-view {
			background-color: #44598B;
			height: 6rpx;
			text {
				width: 220rpx;
				background-color: #F35917;
				height: 6rpx;
			}
		}
		.padding-box {
			padding: 10rpx 32rpx 20rpx 32rpx;
		}

		.teacher-skill {
			margin-top: 20rpx;
			flex-direction: row;
			.item-value {
				flex-direction: row;

				.scroll-list {
					width: 100%;
					text {
						color: #5B7EA9;
						border: solid 2rpx #BECCE7;
						color: #5B7EA9;
						padding: 8rpx 14rpx;
						border-radius: 25rpx;
						font-size: 24rpx;
						margin-bottom: 20rpx;
					}
					
					text:not(:nth-child(3n)) {
						margin-right: 20rpx;
					}
				}
			}
		}

		.teacher-bottom {
			text-align: center;
			margin-top: 20rpx;
		}
	}

	.button-group {
		flex-direction: row;
		gap: 20rpx;
		padding: 32rpx;
	}

	.comment-box {
		padding: 24rpx;
		background-color: #f5f5f5;
		margin: 24rpx;
		border-radius: 20rpx;

		.comment-top {
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
			font-size: 24rpx;

			.comment-top-left {
				flex-direction: row;
			}
		}

		.comment-content {
			margin-top: 20rpx;
			font-size: 28rpx;
		}
	}

	.comment-item {
		margin-bottom: 0;
	}

	.comment-view-all {
		text-align: center;
		color:  #aaa;
	}

	.bottom-button-box {
		position: fixed;
		width: 100%;
		bottom: 0;
		left: 0;
		z-index: 999;
		background-color: #ffffff;
		.bottom-button-group {
			flex-direction: row;
			align-items: center;
			.chat-button-view {
				flex: 1;
				background: linear-gradient(270deg, #FFC37C 0%, #EE5929 100%);
				border-radius: 40rpx;
				margin: 10rpx 30rpx 10rpx 30rpx;
			}
			.button-view {
				margin-right: 30rpx;
			}
			.u-button--square {
				border-radius: 0;
			}
		}
	}

	.video-box {
		padding: 0 30rpx;
	}

	.show-box {
		padding: 68rpx 32rpx 32rpx 32rpx;
		align-items: center;
		text {
			margin-top: 32rpx;
			margin-bottom: 32rpx;
		}
	}
	
	.show-share-box {
		.show-main-box {
			padding: 48rpx 120rpx;
			justify-content: space-between;
			flex-direction: row;
			.show-main-item {
				justify-content: center;
				font-size: 24rpx;
				button::after {
					border: 0;
				}
				button {
					background: transparent;
					border-radius: 0;
					line-height: normal;
					justify-content: center;
					display: flex;
					flex-direction: column;
					align-items: center;
					font-size: 24rpx;
				}
				.show-main-icon {
					background-color: #f5f5f5;
					border-radius: 50rpx;
					width: 100rpx;
					height: 100rpx;
					justify-content: center;
					align-items: center;
					margin-bottom: 16rpx;
				}
			}
		}
		.show-cancel {
			border-top: solid #f5f5f5 2rpx;
			padding: 18rpx 0;
			color: #424242;
			text-align: center;
		}
	}
</style>
